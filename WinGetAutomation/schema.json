{
  "$id": "https://github.com/vedantmgoyal9/vedantmgoyal9/raw/main/WinGetAutomation/schema.json",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "Schema for WinGet Automation Formula",
  "type": "object",
  "required": [
    "$schema",
    "PackageIdentifier",
    "Source",
    "PostResponseScript",
    "Update",
    "AdditionalInfo",
    "PostUpgradeScript",
    "Skip"
  ],
  "properties": {
    "$schema": {
      "const": "https://github.com/vedantmgoyal9/vedantmgoyal9/raw/main/WinGetAutomation/schema.json",
      "type": "string"
    },
    "PackageIdentifier": {
      "type": "string",
      "pattern": "^[^\\.\\s\\\\/:\\*\\?\"<>\\|\\x01-\\x1f]{1,32}(\\.[^\\.\\s\\\\/:\\*\\?\"<>\\|\\x01-\\x1f]{1,32}){1,7}$",
      "maxLength": 128
    },
    "Source": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "InvokeType",
          "Uri",
          "Method",
          "Headers",
          "Body",
          "UserAgent"
        ],
        "properties": {
          "InvokeType": {
            "enum": ["RestMethod", "WebRequest"],
            "type": "string"
          },
          "Uri": {
            "type": "string"
          },
          "Method": {
            "enum": [
              "Default",
              "Delete",
              "Get",
              "Head",
              "Merge",
              "Options",
              "Patch",
              "Post",
              "Put",
              "Trace"
            ],
            "type": "string"
          },
          "Headers": {
            "type": "object",
            "properties": {
              "Authorization": {
                "type": "string",
                "examples": ["\"Bearer $GithubBotToken\" #default-gh"]
              },
              "Accept": {
                "type": "string",
                "examples": ["application/vnd.github.v3+json"]
              }
            },
            "additionalProperties": { "type": "string" }
          },
          "Body": {
            "type": "string"
          },
          "UserAgent": {
            "type": "string"
          },
          "MaximumRedirection": {
            "type": "integer",
            "default": 5
          },
          "SkipHttpErrorCheck": {
            "type": "boolean",
            "default": false
          },
          "ErrorAction": {
            "type": "string",
            "enum": [
              "Break",
              "Continue",
              "Ignore",
              "Inquire",
              "SilentlyContinue",
              "Stop",
              "Suspend"
            ]
          }
        },
        "additionalProperties": false
      },
      "uniqueItems": true
    },
    "PostResponseScript": {
      "type": ["string", "array"],
      "examples": [
        "$UpdateCondition = $Response.prerelease -eq $PreRelease #default-gh",
        "$Response = $Response.BaseResponse.RequestMessage.RequestUri.OriginalString #default-headrequest",
        "$Response = $Response | ConvertFrom-Yaml",
        "$Response = [System.Text.Encoding]::UTF8.GetString($Response.RawContentStream.ToArray()) | ConvertFrom-Yaml"
      ],
      "uniqueItems": true
    },
    "Update": {
      "type": "object",
      "required": ["PackageVersion", "InstallerUrls"],
      "properties": {
        "PackageVersion": {
          "type": "string",
          "examples": [
            "$Response.tag_name.TrimStart('v') #default-gh",
            "($Response | Select-String -Pattern '(?<=v)[0-9.]+').Matches.Value #default-headrequest",
            "$Response.version"
          ]
        },
        "InstallerUrls": {
          "type": ["string", "object"],
          "patternProperties": {
            "^(x86|x64|arm|arm64|neutral)(\\|(user|machine))?$|^(user|machine)$": {
              "type": "string"
            }
          },
          "examples": [
            "$Response.assets.Where({ $_.name -match '.(exe|msi|msix|appx)(bundle){0,1}$' }).browser_download_url #default-gh",
            "$Response #default-headrequest",
            "$InstUri.Replace('#version', $Response.version)"
          ],
          "additionalProperties": false
        },
        "ProductCode": {
          "$id": "#/properties/Update/properties/ProductCode",
          "type": "string"
        },
        "ReleaseDate": {
          "type": "string",
          "default": "(Get-Date -Date $Response.published_at).ToString('yyyy-MM-dd')"
        },
        "Locales": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "ReleaseNotesUrl": {
                "type": "string"
              },
              "ReleaseNotes": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "uniqueItems": true
        },
        "AppsAndFeaturesEntries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "DisplayName": {
                "type": "string"
              },
              "Publisher": {
                "type": "string"
              },
              "DisplayVersion": {
                "type": "string"
              },
              "ProductCode": {
                "$ref": "#/properties/Update/properties/ProductCode"
              }
            },
            "additionalProperties": false
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    },
    "AdditionalInfo": {
      "type": "object",
      "required": ["ForceUpgrade"],
      "properties": {
        "ForceUpgrade": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "PostUpgradeScript": {
      "type": "string"
    },
    "Skip": {
      "type": "object",
      "required": ["Skip?", "Reason"],
      "properties": {
        "Skip?": {
          "type": "boolean",
          "default": false
        },
        "Reason": {
          "type": ["null", "string"],
          "examples": [
            "Automatically marked as stale, not updated for 2.5 years"
          ]
        }
      },
      "if": {
        "properties": {
          "Skip?": {
            "const": true
          }
        }
      },
      "then": {
        "properties": {
          "Reason": {
            "type": "string",
            "minLength": 7
          }
        }
      },
      "else": {
        "properties": {
          "Reason": {
            "type": "null"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
